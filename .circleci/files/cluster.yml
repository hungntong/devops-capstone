---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template to create an EKS cluster'

Parameters:
  ClusterName:
    Description: 'Name of the EKS cluster'
    Type: 'String'
  NodeInstanceType:
    Description: 'Instance type for EKS worker nodes'
    Type: 'String'
    Default: 't3.medium'
  NodeCapacity:
    Description: 'Number of worker nodes for the EKS cluster'
    Type: 'Number'
    Default: '2'
  VpcId:
    Description: 'ID of the VPC for the EKS cluster'
    Type: 'AWS::EC2::VPC::Id'
  SubnetIds:
    Description: 'Comma-separated list of subnet IDs for the EKS cluster'
    Type: 'List<AWS::EC2::Subnet::Id>'

Resources:
  EksCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: !Ref ClusterName
      RoleArn: !GetAtt EksClusterRole.Arn
      Version: '1.20'
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !GetAtt EksClusterSecurityGroup.GroupId
        SubnetIds: !Ref SubnetIds
  EksClusterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'eks.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEKSClusterPolicy'
        - 'arn:aws:iam::aws:policy/AmazonEKSServicePolicy'
  EksClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for the EKS cluster'
      VpcId: !Ref VpcId
  EksNodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Ref ClusterName
      NodeRole: !GetAtt EksNodeGroupRole.Arn
      Subnets: !Ref SubnetIds
      ScalingConfig:
        MinSize: !Ref NodeCapacity
        MaxSize: !Ref NodeCapacity
        DesiredSize: !Ref NodeCapacity
      InstanceTypes:
        - !Ref NodeInstanceType
      DiskSize: 20
      RemoteAccess:
        Ec2SshKey: 'my-key-pair'
      Tags:
        - Key: 'Name'
          Value: 'eks-node-group'
  EksNodeGroupRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - 'arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy'
        - 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly'
